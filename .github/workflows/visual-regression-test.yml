name: Visual Regression Test

on:
  pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ZOLA_VERSION: "0.21.0"
      ZOLA_BIN: ${{ github.workspace }}/zola
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Zola ${{ env.ZOLA_VERSION }}
        run: |
          curl -sL "https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz" | tar -xz
          $ZOLA_BIN --version

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Playwright test runner
        run: |
          npm install
          npm ls

      - name: Install Playwright browser modules and dependecies
        run: npx playwright install --with-deps

      - name: Checkout base commit
        run: git checkout ${{ github.event.pull_request.base.sha }}

      - name: Get copies of test files from the PR to base branch
        run: |
          git checkout ${{ github.event.pull_request.head.sha }} -- tests/ playwright.config.ts

      - name: Build base site
        run: |
          "$ZOLA_BIN" build --base-url "http://127.0.0.1:1111"

      - name: Start base server
        run: |
          python3 -m http.server 1111 --bind 127.0.0.1 --directory public &

      - name: Generate base snapshots
        run: |
          npx playwright test tests/visual-regression-test.spec.ts --update-snapshots

      - name: Stop base server
        run: pkill -f "python3 -m http.server"

      - name: Stash snapshots
        run: git stash push -u tests/visual-regression-test.spec.ts-snapshots/

      - name: Checkout PR head
        run: git checkout ${{ github.event.pull_request.head.sha }}

      - name: Restore base snapshots
        run: git stash pop

      - name: Build PR site
        run: |
          "$ZOLA_BIN" build --base-url "http://127.0.0.1:1111"

      - name: Start PR server
        run: |
          python3 -m http.server 1111 --bind 127.0.0.1 --directory public &

      - name: Run visual regression test
        run: npx playwright test tests/visual-regression-test.spec.ts
        continue-on-error: true

      - name: Stop PR server
        run: pkill -f "python3 -m http.server"

      - name: Upload PR run results
        uses: actions/upload-artifact@v4
        with:
          name: pr-run-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30
